[{"/home/prix/Documents/Key2Iq/my-app/src/index.js":"1","/home/prix/Documents/Key2Iq/my-app/src/App.js":"2","/home/prix/Documents/Key2Iq/my-app/src/serviceWorker.js":"3","/home/prix/Documents/Key2Iq/my-app/src/app/store.js":"4","/home/prix/Documents/Key2Iq/my-app/src/features/counter/Counter.js":"5","/home/prix/Documents/Key2Iq/my-app/src/features/counter/counterSlice.js":"6","/home/prix/Documents/Key2Iq/my-app/src/components/Resume.js":"7","/home/prix/Documents/Key2Iq/my-app/src/components/Skills.js":"8","/home/prix/Documents/Key2Iq/my-app/src/components/References.js":"9","/home/prix/Documents/Key2Iq/my-app/src/components/Education.js":"10","/home/prix/Documents/Key2Iq/my-app/src/components/Experience.js":"11","/home/prix/Documents/Key2Iq/my-app/src/components/Contact.js":"12","/home/prix/Documents/Key2Iq/my-app/src/components/SocialLinks.js":"13","/home/prix/Documents/Key2Iq/my-app/src/redux/resumeSlice.js":"14","/home/prix/Documents/Key2Iq/my-app/src/components/Final.js":"15"},{"size":644,"mtime":1608358206182,"results":"16","hashOfConfig":"17"},{"size":1178,"mtime":1608377449179,"results":"18","hashOfConfig":"17"},{"size":5141,"mtime":1608358206182,"results":"19","hashOfConfig":"17"},{"size":187,"mtime":1608370608432,"results":"20","hashOfConfig":"17"},{"size":1626,"mtime":1608358206178,"results":"21","hashOfConfig":"17"},{"size":1551,"mtime":1608358206182,"results":"22","hashOfConfig":"17"},{"size":3539,"mtime":1608377399865,"results":"23","hashOfConfig":"17"},{"size":3410,"mtime":1608380130857,"results":"24","hashOfConfig":"17"},{"size":4073,"mtime":1608375885397,"results":"25","hashOfConfig":"17"},{"size":4787,"mtime":1608375885389,"results":"26","hashOfConfig":"17"},{"size":4918,"mtime":1608375930219,"results":"27","hashOfConfig":"17"},{"size":2431,"mtime":1608376523922,"results":"28","hashOfConfig":"17"},{"size":2109,"mtime":1608383188038,"results":"29","hashOfConfig":"17"},{"size":3690,"mtime":1608380187575,"results":"30","hashOfConfig":"17"},{"size":4863,"mtime":1608383009704,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11kmlkn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prix/Documents/Key2Iq/my-app/src/index.js",[],["69","70"],"/home/prix/Documents/Key2Iq/my-app/src/App.js",["71"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport Resume from './components/Resume';\r\nimport Final from './components/Final';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n          <Switch>\r\n              <Route path={'/final'}>\r\n                  <Final />\r\n              </Route>\r\n              <Route exact path={'/'}>\r\n                  <Grid container className={styles.root}>\r\n                      <Typography variant={'h3'} gutterBottom>\r\n                          Resume Builder\r\n                      </Typography>\r\n                      <Grid container>\r\n                          <Grid item sm={1} />\r\n                          <Grid item sm={10}>\r\n                              <Resume />\r\n                          </Grid>\r\n                          <Grid item sm={1} />\r\n                      </Grid>\r\n                  </Grid>\r\n              </Route>\r\n\r\n          </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/prix/Documents/Key2Iq/my-app/src/serviceWorker.js",[],"/home/prix/Documents/Key2Iq/my-app/src/app/store.js",[],"/home/prix/Documents/Key2Iq/my-app/src/features/counter/Counter.js",[],"/home/prix/Documents/Key2Iq/my-app/src/features/counter/counterSlice.js",[],["72","73"],"/home/prix/Documents/Key2Iq/my-app/src/components/Resume.js",["74","75"],"import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport NextIcon from '@material-ui/icons/ChevronRightRounded';\n\nimport { Link } from 'react-router-dom';\n\nimport Skills from './Skills';\nimport References from './References';\nimport Education from './Education';\nimport Experience from './Experience';\nimport Contact from './Contact';\nimport SocialLinks from './SocialLinks';\n\nimport styles from './Resume.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    setNameState,\n    setAboutState,\n    setLocationState,\n    getResume,\n} from \"../redux/resumeSlice\";\n\nconst Resume = () => {\n\n    const dispatch = useDispatch();\n    const globalResume = useSelector(getResume);\n\n\n    const [resume, setResume] = React.useState({\n        name: '',\n        about: '',\n        location: ''\n    });\n    const handleChange = (event) => {\n        setResume({\n            ...resume,\n            [event.target.name]: event.target.value\n        });\n    };    \n\n    return (\n        <Grid container className={styles.resumeRoot}>\n            <Grid item sm={1} />\n            <Grid item sm={10} >\n                <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"Name *\"\n                    name={'name'}\n                    fullWidth\n                    value={resume.name}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                    placeholder=\"Your Name Here\"\n                    className={styles.textField}\n                    onBlur={() => {\n                        dispatch(setNameState(resume.name))\n                    }}\n                />\n                <TextField\n                    id=\"standard-multiline-static\"\n                    label=\"About Yourself *\"\n                    name={\"about\"}\n                    fullWidth\n                    value={resume.about}\n                    onChange={handleChange}\n                    multiline\n                    rows={4}\n                    placeholder=\"Write Something About Yourself\"\n                    variant=\"outlined\"\n                    className={styles.textField}\n                    onBlur={() => {\n                        dispatch(setAboutState(resume.about))\n                    }}\n                />\n                <TextField\n                    id=\"standard-multiline-static\"\n                    label=\"Location\"\n                    name={\"location\"}\n                    fullWidth\n                    placeholder=\"Where Are you currently ?\"\n                    variant=\"outlined\"\n                    className={styles.textField}\n                    value={resume.location}\n                    onChange={handleChange}\n                    onBlur={() => {\n                        dispatch(setLocationState(resume.location))\n                    }}\n                />\n                <Skills />\n                <References />\n                <Education />\n                <Experience />\n                <Contact />\n                <SocialLinks />\n                <Link to={'/final'}>\n                    <Button variant={'contained'} color=\"primary\" fullWidth style={{padding :'1rem'}}>\n                        Next <NextIcon />\n                    </Button>\n                </Link>\n            </Grid>\n            <Grid item sm={1} />\n           \n\n        </Grid>\n    )\n}\n\nexport default Resume;","/home/prix/Documents/Key2Iq/my-app/src/components/Skills.js",[],"/home/prix/Documents/Key2Iq/my-app/src/components/References.js",[],"/home/prix/Documents/Key2Iq/my-app/src/components/Education.js",["76","77"],"import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlineRounded';\n\nimport styles from './Education.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    setEducationState,\n    getResume, setReferencesState,\n} from \"../redux/resumeSlice\";\n\nconst Education = () => {\n\n    const dispatch = useDispatch();\n    const globalResume = useSelector(getResume);\n\n    const [educations , setEducations] = React.useState([{\n        name: 'Higher Education',\n        organization: 'Kendriya Vidyalaya, Raksha Vihar',\n        place: 'Kanpur'\n    }]);\n\n    React.useEffect(() => {\n        dispatch(setEducationState(educations));\n    }, [dispatch, educations]);\n\n    const handleChange = (e, idx) => {\n\n        const newEducation = educations.map((education, id) => {\n            if(idx === id){\n                education = {\n                    ...education,\n                    [e.target.name]: e.target.value\n                }\n            } \n            return education;\n        });\n        setEducations([\n            ...newEducation\n        ])\n    }   \n\n    const handleAdd = () => {\n        const noOfEducation = educations.length\n        const newEducation = {\n            name: '',\n            organization: '',\n            place: ''\n        }\n        setEducations([\n            ...educations,\n            newEducation\n        ])\n    }\n\n    const handleDelete = (idx) => {\n\n        const newEducations = educations.filter((education, id) => idx !== id)\n\n        setEducations([\n            ...newEducations\n        ]);\n    }\n\n    return (\n        <Paper className={styles.educationRoot}>\n            <Grid container className={styles.educationHeader}>\n                <Typography variant=\"h6\" style={{marginLeft: '1rem'}}>\n                    Education\n                </Typography>\n                <IconButton color=\"primary\" onClick={handleAdd}>\n                    <AddIcon />\n                </IconButton>\n            </Grid>\n            <Grid container>\n                <Grid item sm={1} />\n                <Grid item sm={10} style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                        educations.map((education, idx) => {\n                            return (\n                                <Paper key={`education-${idx}`} className={styles.educationWrapper}>\n                                    <Grid container>\n                                        <TextField\n                                            name={'name'}\n                                            value={education.name}\n                                            placeholder=\"Enter name of Education\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            name={'organization'}\n                                            value={education.organization}\n                                            placeholder=\"Enter The Organization Name..\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            name={'place'}\n                                            value={education.place}\n                                            placeholder=\"Enter the Place of Organization\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n\n                                    </Grid>\n                                    <IconButton onClick={(e) => handleDelete(idx)}>\n                                        <DeleteIcon color=\"error\"/>\n                                    </IconButton>\n                                </Paper>\n                            )\n                        })\n                    }\n                </Grid>\n                <Grid item sm={1} />\n            </Grid>\n           \n        </Paper>\n    )\n}\n\nexport default Education\n","/home/prix/Documents/Key2Iq/my-app/src/components/Experience.js",["78","79","80","81"],"import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlineRounded';\n\nimport styles from './Experience.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getResume, setExperienceState} from \"../redux/resumeSlice\";\n\nconst Experience = () => {\n\n    const dispatch = useDispatch();\n    const globalResume = useSelector(getResume);\n\n    const [experiences , setExperiences] = React.useState([{\n        name: 'React UI Developer',\n        place: 'Cypherock',\n        total: '6 Months'\n    }]);\n\n    React.useEffect(() => {\n        dispatch(setExperienceState(experiences));\n    }, [dispatch, experiences])\n\n    const handleChange = (e, idx) => {\n        console.log('I am WOrking', e.target.name)\n        const newExperiences = experiences.map((experience, id) => {\n            if(idx === id){\n                experience = {\n                    ...experience,\n                    [e.target.name]: e.target.value\n                }\n            }\n            return experience;\n        });\n        setExperiences([\n            ...newExperiences\n        ])\n    }\n\n    const handleAdd = () => {\n\n        const newExperience = {\n            name: '',\n            place: '',\n            total: ''\n        }\n        setExperiences([\n            ...experiences,\n            newExperience\n        ])\n    }\n\n    const handleDelete = (idx) => {\n        const newExperiences = experiences.filter((experience, id) => idx !== id)\n        setExperiences([\n            ...newExperiences\n        ]);\n    }\n\n    return (\n        <Paper className={styles.experienceRoot}>\n            <Grid container className={styles.experienceHeader}>\n                <Typography variant=\"h6\" style={{marginLeft: '1rem'}}>\n                    Experience\n                </Typography>\n                <IconButton color=\"primary\" onClick={handleAdd}>\n                    <AddIcon />\n                </IconButton>\n            </Grid>\n            <Grid container>\n                <Grid item sm={1} />\n                <Grid item sm={10} style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                        experiences.map((skill, idx) => {\n                            return (\n                                <Paper key={`experience-${idx}`} className={styles.experienceWrapper}>\n                                    <Grid container>\n                                        <TextField\n                                            name={'name'}\n                                            value={skill.name}\n                                            fullWidth\n                                            placeholder=\"Enter Your Role Position\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            name={'place'}\n                                            value={skill.place}\n                                            fullWidth\n                                            placeholder=\"Enter the Organization or Company Where you worked\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            name={'total'}\n                                            value={skill.total}\n                                            fullWidth\n                                            placeholder=\"Enter Your total Experience There (e.g. 6 Months, 1 year)\"\n                                            onChange={(e) => handleChange(e, idx)}\n                                            className={styles.textField}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <IconButton onClick={(e) => handleDelete(idx)}>\n                                        <DeleteIcon color=\"error\"/>\n                                    </IconButton>\n                                </Paper>\n                            )\n                        })\n                    }\n                </Grid>\n                <Grid item sm={1} />\n            </Grid>\n\n        </Paper>\n    )\n}\n\nexport default Experience\n","/home/prix/Documents/Key2Iq/my-app/src/components/Contact.js",["82","83","84"],"import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\n\nimport styles from './Contact.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getResume, setContactState} from \"../redux/resumeSlice\";\n\nconst getLabel = (field) => {\n    switch (field){\n        case 'email': return 'Email *'\n        case 'secondaryEmail': return 'Secondary Email';\n        case 'phoneno': return 'Phone Number *';\n        default: return \"Error\";\n    }\n}\n\nconst Contact = () => {\n\n\n    const dispatch = useDispatch();\n    const globalResume = useSelector(getResume);\n\n\n    const [contact, setContact] = React.useState({\n        email: '',\n        secondaryEmail: '',\n        phoneno: ''\n    });\n\n    React.useEffect(() => {\n        dispatch(setContactState(contact))\n    }, [dispatch, contact])\n\n    const handleChange = (e) => {\n        setContact({\n            ...contact,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <Paper style={{margin: '1rem 0rem', padding: '1rem'}}>\n            <Grid container >\n                <Typography variant=\"h6\" style={{marginLeft: '1rem'}}>\n                    Contact Info\n                </Typography>\n            </Grid>\n            <Grid container>\n                <Grid item sm={1} />\n                <Grid item sm={10} className={styles.fieldWrapper}>\n                    {\n                        Object.keys(contact).map((item ) => {\n                            return (\n                                <TextField\n                                    key={item}\n                                    name={item}\n                                    label={getLabel(item)}\n                                    value={contact[item]}\n                                    placeholder={`Enter your ${item}`}\n                                    onChange={handleChange}\n                                    className={styles.textField}\n                                />\n                            )\n                        })\n                    }\n                </Grid>\n                <Grid item sm={1} />\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default Contact;","/home/prix/Documents/Key2Iq/my-app/src/components/SocialLinks.js",["85"],"/home/prix/Documents/Key2Iq/my-app/src/redux/resumeSlice.js",[],"/home/prix/Documents/Key2Iq/my-app/src/components/Final.js",["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":5,"nodeType":"94","messageId":"95","endLine":14,"endColumn":9},{"ruleId":"88","replacedBy":"96"},{"ruleId":"90","replacedBy":"97"},{"ruleId":"92","severity":1,"message":"98","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":30,"column":11,"nodeType":"94","messageId":"95","endLine":30,"endColumn":23},{"ruleId":"92","severity":1,"message":"100","line":16,"column":16,"nodeType":"94","messageId":"95","endLine":16,"endColumn":34},{"ruleId":"92","severity":1,"message":"101","line":53,"column":15,"nodeType":"94","messageId":"95","endLine":53,"endColumn":28},{"ruleId":"92","severity":1,"message":"99","line":18,"column":11,"nodeType":"94","messageId":"95","endLine":18,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":91,"column":45,"nodeType":"104","endLine":91,"endColumn":54},{"ruleId":"102","severity":1,"message":"103","line":100,"column":45,"nodeType":"104","endLine":100,"endColumn":54},{"ruleId":"102","severity":1,"message":"103","line":109,"column":45,"nodeType":"104","endLine":109,"endColumn":54},{"ruleId":"92","severity":1,"message":"105","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":18},{"ruleId":"92","severity":1,"message":"106","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"99","line":28,"column":11,"nodeType":"94","messageId":"95","endLine":28,"endColumn":23},{"ruleId":"92","severity":1,"message":"99","line":19,"column":11,"nodeType":"94","messageId":"95","endLine":19,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":16,"column":1,"nodeType":"109","messageId":"110","endLine":26,"endColumn":2},{"ruleId":"92","severity":1,"message":"111","line":50,"column":11,"nodeType":"94","messageId":"95","endLine":50,"endColumn":19},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["112"],["113"],"'Typography' is defined but never used.","'globalResume' is assigned a value but never used.","'setReferencesState' is defined but never used.","'noOfEducation' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]